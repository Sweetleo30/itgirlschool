import './App.css';

import './components/Hero.css';
import Hero from './components/Hero';

const heros = [
  {
    id: "01",
    name: "Железный человек",
    photo: "./img/iron_man.jpg",
    universe: "Marvel Comics",
    alterEgo: "Тони Старк",
    occupation: "гений, миллиардер, плейбой, филантроп",
    superpowers: "высокий уровень интеллекта, широкие познания науки и техники, связь со всемирной паутиной, бронекостюмы",
    more: "Пожалуй, самый популярный современный супергерой. У него много общего с мрачной птицей ночи Бэтменом: оба потеряли \
    родителей в детстве, стали борцами с преступностью без особых сверхсил, невероятно богатые. Только если Бэтменом восхищаются, \
    то Тони Старка — обожают :) То ли дело в шикарной актерской игре Роберта Дауни мл., который выбил роль у Николаса Кейджа и Тома \
    Круза, то ли в хорошо прописанном персонаже.\n\n Прототипом для героя послужили Илон Маск и изобретатель Говард Хьюз.\n\n\
    Железный Человек не всегда ходил в красном модном костюме: в своих первых версиях 1963 года он был скромного серого цвета. \
    Увы, в киновоплощении бронекостюм даже не из металла — его делали из пластика и стекловолокна."
  },
  {
    id: "02",
    name: "Человек-паук",
    photo: "./img/spiderman.webp",
    universe: "Marvel Comics",
    alterEgo: "Питер Паркер",
    occupation: "борец за справедливость, студент, фотограф",
    superpowers: "сверхчеловеческие рефлексы, «паучье чутье», способность прилепляться к твердым поверхностям, производство паутины",
    more: "Человек-паук родился от потребности Marvel Comics создать героя-подростка. Другие супергерои вроде Бэтмена и Супермена \
    — взрослые мужчины, и целевая аудитория не видела в них примеры для подражания. Пятнадцатилетний Питер Паркер дал понять всем \
    тинейджерам Земли, что можно и злодеев уничтожить, и на красавице жениться. Для этого даже не обязательно быть суперкрасавчиком! \
    Всего лишь нужен укус паучка:)\n\n Питер не сразу использовал свои силы во благо людей: изначально он хотел делать на них \
    деньги, участвуя в нелегальных боях без правил. Затем его любимый дядя Бен умер от рук грабителя, и подросток поклялся, что \
    очистит свой родной Нью-Йорк ото зла. Однако спустя время подросток понял, что одной клятвы недостаточно и что «с великой силой \
    приходит великая ответственность»."
  },
  {
    id: "03",
    name: "Халк",
    photo: "./img/hulk.webp",
    universe: "Marvel Comics",
    alterEgo: "Брюс Беннер",
    occupation: "супергерой, борец за справедливость, ученый-биохимик",
    superpowers: "сверхчеловеческая сила искорость, выносливость, полет",
    more: "Идею создания Халка как персонажа можно отнести к фантастической новелле «Странная история доктора Джекила и мистера \
    Хайда», в которой ученый не может примириться со своим демоническим альтер эго. Прошлое у Халка — хуже некуда: отец Брюса страдал \
    от алкоголизма и приступов ярости, а мать пыталась всеми силами уберечь сына от гнева своего мужа. Она погибла, защищая своего \
    единственного ребенка от его побоев.\n\nПронеся через все детство тяжелый психологический груз, Брюс вырос в чрезвычайно \
    одаренного, но замкнутого юношу. Хотя Брюс не мог уважать отца, но пошел в науке по его стопам и выбрал ядерную физику. Во время \
    эксперимента он ввел себе пробную сыворотку и подверг себя воздействию большого количества гамма-радиации. Беннер превратился в \
    мускулистого неуправляемого гиганта, который крушил все вокруг и не понимал, что происходит. Так имя Халка стало нарицательным \
    для людей, который не могут держать себя в руках."
  }
]

function App() {
  return (
    <div className="App">
      <div className="gallery__container">
        <h2 className="title">Супергерои Marvel</h2>
        <div className="gallery__content">
          {
            heros.map((hero) =>
              <Hero key={hero.id} name={hero.name} photo={hero.photo} universe={hero.universe} alterEgo={hero.alterEgo}
                occupation={hero.occupation} superpowers={hero.superpowers} more={hero.more}></Hero>
            )
          }
        </div>
      </div>
    </div>
  );
}

export default App;
